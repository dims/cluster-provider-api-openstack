apiVersion: cluster.x-k8s.io/v1alpha2
kind: Machine
metadata:
  name: ${CLUSTER_NAME}-controlplane-0
  labels:
    cluster.x-k8s.io/control-plane: "true"
    cluster.x-k8s.io/cluster-name: "${CLUSTER_NAME}"
spec:
  version: ${KUBERNETES_VERSION}
  bootstrap:
    configRef:
      apiVersion: bootstrap.cluster.x-k8s.io/v1alpha2
      kind: KubeadmConfig
      name: ${CLUSTER_NAME}-controlplane-0
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha2
    kind: OpenStackMachine
    name: ${CLUSTER_NAME}-controlplane-0
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha2
kind: OpenStackMachine
metadata:
  name: ${CLUSTER_NAME}-controlplane-0
spec:
  flavor: m1.medium
  image: <Image Name>
  keyName: cluster-api-provider-openstack
  availabilityZone: nova
  networks:
  - uuid: <Kubernetes Network ID>
  floatingIP: <Floating IP (only set if not using an APIServer LB>
  securityGroups:
  - uuid: <Security Group ID>
  trunk: false
  tags:
  - a-machine-specific-tag
  cloudName: $CLOUD
  cloudsSecret:
    name: cloud-config
    namespace: capo-system
  serverMetadata:
    key: value
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha2
kind: KubeadmConfig
metadata:
  name: ${CLUSTER_NAME}-controlplane-0
spec:
  files:
  - path: /etc/kubernetes/cloud.conf
    owner: root
    permissions: "0600"
    content: |-
      # cloud.conf to communicate with OpenStack
      $OPENSTACK_CLOUD_PROVIDER_CONF
  - path: /etc/certs/cacert
    owner: root
    permissions: "0600"
    content: |-
      # cacert to communicate with OpenStack
      $OPENSTACK_CLOUD_CACERT_CONFIG
  users:
  - name: ubuntu
    sshAuthorizedKeys:
    - "$MACHINE_CONTROLLER_SSH_PUBLIC_FILE_CONTENT"
  initConfiguration:
    localAPIEndpoint:
      advertiseAddress: '{{ ds.ec2_metadata.local_ipv4 }}'
      bindPort: 6443
    nodeRegistration:
      name: '{{ local_hostname }}'
      kubeletExtraArgs:
        cloud-provider: openstack
        cloud-config: /etc/kubernetes/cloud.conf
  clusterConfiguration:
    controlPlaneEndpoint: "<loadbalancer or control plane floating ip>:6443"
    kubernetesVersion: 1.15.0
    imageRepository: k8s.gcr.io
    apiServer:
      extraArgs:
        cloud-provider: openstack
        cloud-config: /etc/kubernetes/cloud.conf
      extraVolumes:
      - name: cloud
        hostPath: /etc/kubernetes/cloud.conf
        mountPath: /etc/kubernetes/cloud.conf
        readOnly: true
    controllerManager:
      extraArgs:
        cloud-provider: openstack
        cloud-config: /etc/kubernetes/cloud.conf
      extraVolumes:
      - name: cloud
        hostPath: /etc/kubernetes/cloud.conf
        mountPath: /etc/kubernetes/cloud.conf
        readOnly: true
      - name: cacerts
        hostPath: /etc/certs/cacert
        mountPath: /etc/certs/cacert
        readOnly: true

---
apiVersion: cluster.x-k8s.io/v1alpha2
kind: Machine
metadata:
  name: ${CLUSTER_NAME}-controlplane-1
  labels:
    cluster.x-k8s.io/control-plane: "true"
    cluster.x-k8s.io/cluster-name: "${CLUSTER_NAME}"
spec:
  version: ${KUBERNETES_VERSION}
  bootstrap:
    configRef:
      apiVersion: bootstrap.cluster.x-k8s.io/v1alpha2
      kind: KubeadmConfig
      name: ${CLUSTER_NAME}-controlplane-1
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha2
    kind: OpenStackMachine
    name: ${CLUSTER_NAME}-controlplane-1
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha2
kind: OpenStackMachine
metadata:
  name: ${CLUSTER_NAME}-controlplane-1
spec:
  flavor: m1.medium
  image: <Image Name>
  keyName: cluster-api-provider-openstack
  availabilityZone: nova
  networks:
  - uuid: <Kubernetes Network ID>
  securityGroups:
  - uuid: <Security Group ID>
  trunk: false
  tags:
  - a-machine-specific-tag
  cloudName: $CLOUD
  cloudsSecret:
    name: cloud-config
    namespace: capo-system
  serverMetadata:
    key: value
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha2
kind: KubeadmConfig
metadata:
  name: ${CLUSTER_NAME}-controlplane-1
spec:
  files:
  - path: /etc/kubernetes/cloud.conf
    owner: root
    permissions: "0600"
    content: |-
      # cloud.conf to communicate with OpenStack
      $OPENSTACK_CLOUD_PROVIDER_CONF
  - path: /etc/certs/cacert
    owner: root
    permissions: "0600"
    content: |-
      # cacert to communicate with OpenStack
      $OPENSTACK_CLOUD_CACERT_CONFIG
  users:
  - name: ubuntu
    sshAuthorizedKeys:
    - "$MACHINE_CONTROLLER_SSH_PUBLIC_FILE_CONTENT"
  joinConfiguration:
    controlPlane:
      localAPIEndpoint:
        advertiseAddress: '{{ ds.ec2_metadata.local_ipv4 }}'
        bindPort: 6443
    nodeRegistration:
      name: '{{ local_hostname }}'
      kubeletExtraArgs:
        cloud-provider: openstack
        cloud-config: /etc/kubernetes/cloud.conf
---
apiVersion: cluster.x-k8s.io/v1alpha2
kind: Machine
metadata:
  name: ${CLUSTER_NAME}-controlplane-2
  labels:
    cluster.x-k8s.io/control-plane: "true"
    cluster.x-k8s.io/cluster-name: "${CLUSTER_NAME}"
spec:
  version: ${KUBERNETES_VERSION}
  bootstrap:
    configRef:
      apiVersion: bootstrap.cluster.x-k8s.io/v1alpha2
      kind: KubeadmConfig
      name: ${CLUSTER_NAME}-controlplane-2
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha2
    kind: OpenStackMachine
    name: ${CLUSTER_NAME}-controlplane-2
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha2
kind: OpenStackMachine
metadata:
  name: ${CLUSTER_NAME}-controlplane-2
spec:
  flavor: m1.medium
  image: <Image Name>
  keyName: cluster-api-provider-openstack
  availabilityZone: nova
  networks:
  - uuid: <Kubernetes Network ID>
  securityGroups:
  - uuid: <Security Group ID>
  trunk: false
  tags:
  - a-machine-specific-tag
  cloudName: $CLOUD
  cloudsSecret:
    name: cloud-config
    namespace: capo-system
  serverMetadata:
    key: value
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha2
kind: KubeadmConfig
metadata:
  name: ${CLUSTER_NAME}-controlplane-2
spec:
  files:
  - path: /etc/kubernetes/cloud.conf
    owner: root
    permissions: "0600"
    content: |-
      # cloud.conf to communicate with OpenStack
      $OPENSTACK_CLOUD_PROVIDER_CONF
  - path: /etc/certs/cacert
    owner: root
    permissions: "0600"
    content: |-
      # cacert to communicate with OpenStack
      $OPENSTACK_CLOUD_CACERT_CONFIG
  users:
  - name: ubuntu
    sshAuthorizedKeys:
    - "$MACHINE_CONTROLLER_SSH_PUBLIC_FILE_CONTENT"
  joinConfiguration:
    controlPlane:
      localAPIEndpoint:
        advertiseAddress: '{{ ds.ec2_metadata.local_ipv4 }}'
        bindPort: 6443
    nodeRegistration:
      name: '{{ local_hostname }}'
      kubeletExtraArgs:
        cloud-provider: openstack
        cloud-config: /etc/kubernetes/cloud.conf
